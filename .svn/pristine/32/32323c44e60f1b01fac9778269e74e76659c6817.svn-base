//using HumanAPIClient.Model;
//using HumanAPIClient.Service;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using System.Net;
using System.Web;
using HumanAPIClient.Service;
using HumanAPIClient.Model;
using DexComanda.Models;
using DexComanda;
namespace DexComanda
{
    public partial class frmEnvioSms : Form
    {
        //private SimpleSending cliente;
        //private SimpleMessage mensagem;
        private Conexao con;
        private DateTime DataInicial;
        private DateTime DataFinal;
        public string RetornoServ;
        private string NomeEmpresa;
        private string NomeCliente;
        private int TotalSelecionado;

        public frmEnvioSms()
        {
             
            InitializeComponent();
            con = new Conexao();
            NomeEmpresa = Sessions.returnEmpresa.Nome;

        }

        private void frmEnvioSms_Load(object sender, EventArgs e)
        {
            // MultipleSending Cliente = new MultipleSending("xsistemas", "XJzaDYXQ");
            lblRestante.Text = Convert.ToString(150 - NomeEmpresa.ToString().Length);

        }

        private void EnviarSMS(object sender, EventArgs e)
        {
                
            if (rbAniversariantes.Checked == false && rbSemPedidos.Checked == false && txtMensagem.Text != "")
                {
                    MessageBox.Show("Selecione primeiro para que grupo enviará as mensagems", "Aviso XCommanda");
                }
                else
                {
                    if (rbAniversariantes.Checked)
                    {
                        if (txtDataFinal.Text.Replace("  /", "") != "" || txtDataFinal.Text.Replace("  /", "") != "")
                        {

                            DexComanda.Utils.ClientesAniversariantes(txtDataInicial.Text, txtDataFinal.Text, txtMensagem.Text,cbxPorta.Text);
                        }
                        else
                        {
                            MessageBox.Show("Preencha o periodo para enviar", "Aviso XCommada");
                        }

                    }
                    else if (rbSemPedidos.Checked)
                    {
                        ClientesSemPedidos();
                    }

                 //   MessageBox.Show(RetornoServ, "Retorno SMS");
                }

            
           
            lbl.Text = Convert.ToString(TotalSelecionado);
        }
            
        

        private void SelecionarClientesEnvio(object sender, EventArgs e)
        {
            
        }


        //public string EnvioSMS(string iPara, string iMessagem, string iFrom)
        //{
        //    cliente = new SimpleSending("xsistemas", "IdJQcMl5DU");
        //    mensagem = new SimpleMessage();
        //    mensagem.To = iPara;
        //    mensagem.From = iFrom;
        //    mensagem.Message = iMessagem;
        //    mensagem.Schedule = DateTime.Now.ToString();
        //    List<String> retorno = cliente.send(mensagem);

        //    return RetornoServ = retorno[0].ToString();
        //    // return RetornoServ;
        //}
        //public void ClientesAniversariantes()
        //{
        //    DBExpertDataSet dbExpert = new DBExpertDataSet();
        //    DataInicial = Convert.ToDateTime(txtDataInicial.Text + "/" + DateTime.Now.Year + " 00:00:00");
        //    DataFinal = Convert.ToDateTime(txtDataFinal.Text + "/" + DateTime.Now.Year + " 23:59:59");
        //    DataSet ListaClientes = con.SelectObterAniversariantes("Pessoa", "spObterAnivesariantes", DataInicial, DataFinal);
        //    foreach (DataRow row in ListaClientes.Tables["Pessoa"].Rows)
        //    {
        //         TotalSelecionado =ListaClientes.Tables["Pessoa"].Rows.Count;
 
        //        string Telefone = row["Telefone"].ToString();
        //        NomeCliente = row["Nome"].ToString();

        //        if (Telefone.Length==8)
        //        {
        //            DexComanda.Utils.EnvioSMS("55279" + Telefone, AdicionaNomeCliente(txtMensagem.Text), NomeEmpresa);
        //        }
        //        else
        //        {
        //            DexComanda.Utils.EnvioSMS("5527" + Telefone, AdicionaNomeCliente(txtMensagem.Text), NomeEmpresa);
        //        }
                
        //    }
         
        //}
        
        public void ClientesSemPedidos()
        {
            DataInicial = Convert.ToDateTime(txtDataInicial2.Text);
            DataFinal = Convert.ToDateTime(txtDataFinal2.Text);
            DataSet ListaClientes = con.SelectObterClientesSemPedido("Pedido", "spObterClientesSemPedido", DataInicial, DataFinal);
            foreach (DataRow item in ListaClientes.Tables["Pedido"].Rows)
            {
                //TotalSelecionado = ListaClientes.Tables["Pessoa"].Rows.Count;
                string Telefone = item["Telefone"].ToString();
                NomeCliente = item["Nome"].ToString();
                if (Telefone.Length == 8)
                {
                    DexComanda.Utils.EnvioSMS("55279" + Telefone, AdicionaNomeCliente(txtMensagem.Text), NomeEmpresa);
                }
                else
                {
                    DexComanda.Utils.EnvioSMS("5527" + Telefone, AdicionaNomeCliente(txtMensagem.Text), NomeEmpresa);
                }
            }
        }

        private void ContadorCaracters(object sender, EventArgs e)
        {
           
        }

        private void txtMensagem_KeyDown(object sender, KeyEventArgs e)
        {
            int TotalCaracteres = 150 - NomeEmpresa.Length;
            int TotalContado = txtMensagem.Text.Length;

            if (txtMensagem.Text !="")
            {
                lblRestante.Text = Convert.ToString(TotalCaracteres - TotalContado);  
            }
            
        }
        private string AdicionaNomeCliente(string iMensagem)
        {
            if (iMensagem.Contains("@Cliente"))
            {
                iMensagem = iMensagem.Replace("@Cliente", NomeCliente);
            }

            return iMensagem;
        }
 

    }
}
