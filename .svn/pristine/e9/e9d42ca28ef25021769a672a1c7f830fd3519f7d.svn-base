using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using DexComanda.Relatorios;
using Microsoft.ReportingServices.Interfaces;
using DexComanda.Models;
using Microsoft.Reporting.WinForms;


namespace DexComanda.Relatorios
{
    public partial class frmSelecionarCliente : Form
    {

        private Conexao con;
        private int TelefoneCliente;
        private List<Pedido> listaDePedidos;
        

        public frmSelecionarCliente()
        {
            try
            {

            InitializeComponent();
            con = new Conexao();
            listaDePedidos = new List<Pedido>();
            dataInicio.Value = DateTime.Now;
            dataFim.Value = DateTime.Now;
            }
            catch (Exception er)
            {

                MessageBox.Show(er.Message);
            }
        }

        private void frmSelecionarCliente_Load(object sender, EventArgs e)
        {
            this.cbxFormaPagamento.DataSource = con.SelectAll("FormaPagamento", "spObterFormaPagamento").Tables["FormaPagamento"];
            this.cbxFormaPagamento.DisplayMember = "Descricao";
            this.cbxFormaPagamento.ValueMember = "Codigo";
            
        }

        public void PopularGrid(string table, DataGridView gridView)
        {
            gridView.DataSource = null;
            gridView.AutoGenerateColumns = true;
            gridView.DataSource = con.SelectAll(table, "spObter" + table);
            gridView.DataMember = table;

            con.Close();
        }

        private void clientesGridView_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            //VisualisarRelatarioPedidoPorPessoa();

            //USADO PARA PASSAR PARAMETOS PARA O RELATORIO
            //ReportParameter p = new ReportParameter("CodPessoa", CodCliente.ToString());
            //this.rpvPedidoPorPessoa.LocalReport.SetParameters(new ReportParameter[]{p});
           
            this.rpvPedidoPorPessoa.RefreshReport();
        }

        public void VisualisarRelatarioPedidoPorPessoa() 
        {
          
        }

        private void txtTelefoneCliente_KeyDown(object sender, KeyEventArgs e)
        {
            //if (e.KeyCode == Keys.Enter) 
            //{
            //    if (!txtTelefoneCliente.Text.Equals(""))
            //    {
            //        TelefoneCliente = int.Parse(txtTelefoneCliente.Text.ToString());
            //    }
            //    VisualisarRelatarioPedidoPorPessoa();
            //}
        }

        private void dataFim_ValueChanged(object sender, EventArgs e)
        {
            
            //VisualisarRelatarioPedidoPorPessoa();
        }

        public void Consultar(object sender, EventArgs e) 
        {
            DataSet pessoa = null;
            DataRow clienteRow = null;

            if (!txtTelefoneCliente.Text.Equals(""))
            {
                TelefoneCliente = int.Parse(txtTelefoneCliente.Text.ToString());
                //Consulta Cliente
                pessoa = con.SelectPessoaPorTelefone("Pessoa", "spObterPessoaPorTelefone", TelefoneCliente);
                clienteRow = pessoa.Tables["Pessoa"].Rows[0];
            }

            //Faz a consulta dos Pedidos

            DataSet ds = con.SelectAll("Pedido", "spObterPedidoFinalizado");

            //Pega a view padrão da tabela
            DataView dv = ds.Tables[0].DefaultView;

            string query = "";
            var dtInicio = Convert.ToDateTime(dataInicio.Value.ToShortDateString() + " 00:00:00");
            var dtFim = dataFim.Value.ToShortDateString()+" "+DateTime.Now.ToShortTimeString();

            if (!txtTelefoneCliente.Text.Equals(""))
            {
                query = "CodPessoa = " + clienteRow["Codigo"] + " AND RealizadoEM >= '" + dtInicio + "' AND RealizadoEM <='" + dtFim + "' ";
            }
            else
            {
                query = "RealizadoEM >= '" + dtInicio + "' AND RealizadoEM <='" + dtFim + "' ";
            }
            if (cbxFormaPagamento.Text != "")
            {
                query = query +"AND FormaPagamento='" + cbxFormaPagamento.Text + "'";
                dv.RowFilter = query;
              //  dv.Sort = "Group by";
            }
            else
            {
                dv.RowFilter = query;
                dv.Sort = "Codigo ASC";
            }
            if (dv.Count > 0)
            {
                //clientesGridView.DataSource = null;
                //clientesGridView.AutoGenerateColumns = true;
                //clientesGridView.DataSource = pessoa;
                //clientesGridView.DataMember = "Pessoa";

                //Override do datasource setado por padrão no frmSelecionarCliente.Designer.cs
                this.pedidoBindingSource.DataSource = dv;

                //Preenche o adapter e atualiza o reportview
                //this.pedidoTableAdapter.Fill(this.dBExpertDataSet.Pedido);
                this.rpvPedidoPorPessoa.RefreshReport();

                ds = null;
                dv = null;
                txtTelefoneCliente.Text = "";

            }
            else
            {
                MessageBox.Show("Nenhum pedido encontrado.");
                //clientesGridView.DataSource = null;
                this.rpvPedidoPorPessoa.Clear();
            }
        }
    }
}
